import 'package:dartz/dartz.dart';
import 'package:demo_dprofiles/src/features/AI/ai_features/data/datasources/auto_generate_datasource.dart';
import 'package:demo_dprofiles/src/features/AI/ai_features/domain/repositories/auto_generate_history_repository.dart';
import 'package:demo_dprofiles/src/features/auth/data/models/auth_error_response.dart';
import 'package:demo_dprofiles/src/utils/https/my_response/base_response.dart';
import 'package:dio/dio.dart';
import 'package:injectable/injectable.dart';

@Injectable(as: AutoGenerateRepository)
class AutoGenerateRepositoryImpl implements AutoGenerateRepository {
  final AutoGenerateDataSource _autoGenerateDataSource;

  AutoGenerateRepositoryImpl(this._autoGenerateDataSource);

  @override
  Future<Either<AutoGenerateFailure, BaseResponse>>
      getAutoGenerateHistory() async {
    try {
      final response = await _autoGenerateDataSource.getAutoGenerateHistory();

      return Right(response);
    } on DioException catch (e) {
      return Left(AutoGenerateFailure(
          response: RegularErrorResponse.fromJson(e.response!.data)));
    }
  }
}
